// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > RoundKey_address0;
    sc_out< sc_logic > RoundKey_ce0;
    sc_out< sc_logic > RoundKey_we0;
    sc_out< sc_lv<8> > RoundKey_d0;
    sc_in< sc_lv<8> > RoundKey_q0;
    sc_out< sc_lv<8> > RoundKey_address1;
    sc_out< sc_logic > RoundKey_ce1;
    sc_out< sc_logic > RoundKey_we1;
    sc_out< sc_lv<8> > RoundKey_d1;
    sc_in< sc_lv<8> > RoundKey_q1;
    sc_out< sc_lv<4> > Key_address0;
    sc_out< sc_logic > Key_ce0;
    sc_in< sc_lv<8> > Key_q0;
    sc_out< sc_lv<4> > Key_address1;
    sc_out< sc_logic > Key_ce1;
    sc_in< sc_lv<8> > Key_q1;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox* sbox_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<4> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<3> > i_fu_330_p2;
    sc_signal< sc_lv<3> > i_reg_618;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > shl_ln_fu_340_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_623;
    sc_signal< sc_lv<1> > icmp_ln179_fu_324_p2;
    sc_signal< sc_lv<64> > zext_ln180_fu_348_p1;
    sc_signal< sc_lv<64> > zext_ln180_reg_629;
    sc_signal< sc_lv<64> > zext_ln181_fu_359_p1;
    sc_signal< sc_lv<64> > zext_ln181_reg_639;
    sc_signal< sc_lv<64> > zext_ln182_fu_369_p1;
    sc_signal< sc_lv<64> > zext_ln182_reg_649;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln183_fu_379_p1;
    sc_signal< sc_lv<64> > zext_ln183_reg_659;
    sc_signal< sc_lv<8> > j_fu_390_p3;
    sc_signal< sc_lv<8> > j_reg_672;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln187_fu_384_p2;
    sc_signal< sc_lv<1> > icmp_ln196_fu_424_p2;
    sc_signal< sc_lv<1> > icmp_ln196_reg_696;
    sc_signal< sc_lv<4> > lshr_ln_reg_704;
    sc_signal< sc_lv<6> > i_3_fu_440_p2;
    sc_signal< sc_lv<6> > i_3_reg_709;
    sc_signal< sc_lv<8> > tempa_0_3_reg_714;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > tempa_1_reg_720;
    sc_signal< sc_lv<8> > tempa_2_reg_736;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > tempa_3_reg_741;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > xor_ln235_fu_525_p2;
    sc_signal< sc_lv<8> > xor_ln235_reg_782;
    sc_signal< sc_lv<8> > xor_ln236_fu_531_p2;
    sc_signal< sc_lv<8> > xor_ln236_reg_787;
    sc_signal< sc_lv<8> > xor_ln237_fu_583_p2;
    sc_signal< sc_lv<8> > xor_ln237_reg_802;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > xor_ln238_fu_589_p2;
    sc_signal< sc_lv<8> > xor_ln238_reg_807;
    sc_signal< sc_lv<3> > i_0_reg_302;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > i_1_reg_313;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > zext_ln190_fu_404_p1;
    sc_signal< sc_lv<64> > zext_ln191_fu_415_p1;
    sc_signal< sc_lv<64> > zext_ln192_fu_451_p1;
    sc_signal< sc_lv<64> > zext_ln193_fu_461_p1;
    sc_signal< sc_lv<64> > zext_ln214_fu_466_p1;
    sc_signal< sc_lv<64> > zext_ln215_fu_470_p1;
    sc_signal< sc_lv<64> > zext_ln220_fu_475_p1;
    sc_signal< sc_lv<64> > zext_ln235_fu_484_p1;
    sc_signal< sc_lv<64> > zext_ln236_fu_494_p1;
    sc_signal< sc_lv<64> > zext_ln216_fu_499_p1;
    sc_signal< sc_lv<64> > zext_ln217_fu_503_p1;
    sc_signal< sc_lv<64> > zext_ln237_fu_542_p1;
    sc_signal< sc_lv<64> > zext_ln238_fu_552_p1;
    sc_signal< sc_lv<64> > zext_ln235_1_fu_569_p1;
    sc_signal< sc_lv<64> > zext_ln236_1_fu_578_p1;
    sc_signal< sc_lv<64> > zext_ln237_1_fu_600_p1;
    sc_signal< sc_lv<64> > zext_ln238_1_fu_610_p1;
    sc_signal< sc_lv<2> > trunc_ln180_fu_336_p1;
    sc_signal< sc_lv<4> > or_ln181_fu_353_p2;
    sc_signal< sc_lv<4> > or_ln182_fu_364_p2;
    sc_signal< sc_lv<4> > or_ln183_fu_374_p2;
    sc_signal< sc_lv<8> > add_ln190_fu_398_p2;
    sc_signal< sc_lv<8> > add_ln191_fu_409_p2;
    sc_signal< sc_lv<2> > trunc_ln187_fu_420_p1;
    sc_signal< sc_lv<8> > add_ln192_fu_446_p2;
    sc_signal< sc_lv<8> > add_ln193_fu_456_p2;
    sc_signal< sc_lv<8> > add_ln235_fu_479_p2;
    sc_signal< sc_lv<8> > add_ln236_fu_489_p2;
    sc_signal< sc_lv<8> > tempa_0_fu_507_p2;
    sc_signal< sc_lv<8> > tempa_0_2_fu_519_p3;
    sc_signal< sc_lv<8> > tempa_1_2_fu_513_p3;
    sc_signal< sc_lv<8> > add_ln237_fu_537_p2;
    sc_signal< sc_lv<8> > add_ln238_fu_547_p2;
    sc_signal< sc_lv<8> > or_ln236_fu_573_p2;
    sc_signal< sc_lv<8> > tempa_2_2_fu_563_p3;
    sc_signal< sc_lv<8> > tempa_3_2_fu_557_p3;
    sc_signal< sc_lv<8> > or_ln237_fu_595_p2;
    sc_signal< sc_lv<8> > or_ln238_fu_605_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_4;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<6> ap_const_lv6_2C;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Key_address0();
    void thread_Key_address1();
    void thread_Key_ce0();
    void thread_Key_ce1();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_RoundKey_d0();
    void thread_RoundKey_d1();
    void thread_RoundKey_we0();
    void thread_RoundKey_we1();
    void thread_add_ln190_fu_398_p2();
    void thread_add_ln191_fu_409_p2();
    void thread_add_ln192_fu_446_p2();
    void thread_add_ln193_fu_456_p2();
    void thread_add_ln235_fu_479_p2();
    void thread_add_ln236_fu_489_p2();
    void thread_add_ln237_fu_537_p2();
    void thread_add_ln238_fu_547_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_3_fu_440_p2();
    void thread_i_fu_330_p2();
    void thread_icmp_ln179_fu_324_p2();
    void thread_icmp_ln187_fu_384_p2();
    void thread_icmp_ln196_fu_424_p2();
    void thread_j_fu_390_p3();
    void thread_or_ln181_fu_353_p2();
    void thread_or_ln182_fu_364_p2();
    void thread_or_ln183_fu_374_p2();
    void thread_or_ln236_fu_573_p2();
    void thread_or_ln237_fu_595_p2();
    void thread_or_ln238_fu_605_p2();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_shl_ln_fu_340_p3();
    void thread_tempa_0_2_fu_519_p3();
    void thread_tempa_0_fu_507_p2();
    void thread_tempa_1_2_fu_513_p3();
    void thread_tempa_2_2_fu_563_p3();
    void thread_tempa_3_2_fu_557_p3();
    void thread_trunc_ln180_fu_336_p1();
    void thread_trunc_ln187_fu_420_p1();
    void thread_xor_ln235_fu_525_p2();
    void thread_xor_ln236_fu_531_p2();
    void thread_xor_ln237_fu_583_p2();
    void thread_xor_ln238_fu_589_p2();
    void thread_zext_ln180_fu_348_p1();
    void thread_zext_ln181_fu_359_p1();
    void thread_zext_ln182_fu_369_p1();
    void thread_zext_ln183_fu_379_p1();
    void thread_zext_ln190_fu_404_p1();
    void thread_zext_ln191_fu_415_p1();
    void thread_zext_ln192_fu_451_p1();
    void thread_zext_ln193_fu_461_p1();
    void thread_zext_ln214_fu_466_p1();
    void thread_zext_ln215_fu_470_p1();
    void thread_zext_ln216_fu_499_p1();
    void thread_zext_ln217_fu_503_p1();
    void thread_zext_ln220_fu_475_p1();
    void thread_zext_ln235_1_fu_569_p1();
    void thread_zext_ln235_fu_484_p1();
    void thread_zext_ln236_1_fu_578_p1();
    void thread_zext_ln236_fu_494_p1();
    void thread_zext_ln237_1_fu_600_p1();
    void thread_zext_ln237_fu_542_p1();
    void thread_zext_ln238_1_fu_610_p1();
    void thread_zext_ln238_fu_552_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
