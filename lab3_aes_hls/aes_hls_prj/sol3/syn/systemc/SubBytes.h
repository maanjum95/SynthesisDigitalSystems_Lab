// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _SubBytes_HH_
#define _SubBytes_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox.h"

namespace ap_rtl {

struct SubBytes : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > state_address0;
    sc_out< sc_logic > state_ce0;
    sc_out< sc_logic > state_we0;
    sc_out< sc_lv<8> > state_d0;
    sc_in< sc_lv<8> > state_q0;
    sc_out< sc_lv<4> > state_address1;
    sc_out< sc_logic > state_ce1;
    sc_out< sc_logic > state_we1;
    sc_out< sc_lv<8> > state_d1;
    sc_in< sc_lv<8> > state_q1;


    // Module declarations
    SubBytes(sc_module_name name);
    SC_HAS_PROCESS(SubBytes);

    ~SubBytes();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox* sbox_U;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<8> > reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > reg_332;
    sc_signal< sc_lv<8> > reg_336;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > reg_340;
    sc_signal< sc_lv<4> > state_addr_reg_416;
    sc_signal< sc_lv<4> > state_addr_1_reg_421;
    sc_signal< sc_lv<4> > state_addr_2_reg_426;
    sc_signal< sc_lv<4> > state_addr_3_reg_431;
    sc_signal< sc_lv<4> > state_addr_4_reg_436;
    sc_signal< sc_lv<4> > state_addr_5_reg_441;
    sc_signal< sc_lv<4> > state_addr_6_reg_446;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > state_addr_7_reg_451;
    sc_signal< sc_lv<8> > state_load_4_reg_456;
    sc_signal< sc_lv<8> > state_load_5_reg_461;
    sc_signal< sc_lv<4> > state_addr_8_reg_466;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > state_addr_9_reg_471;
    sc_signal< sc_lv<8> > state_load_6_reg_476;
    sc_signal< sc_lv<8> > state_load_7_reg_481;
    sc_signal< sc_lv<4> > state_addr_10_reg_486;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > state_addr_11_reg_491;
    sc_signal< sc_lv<8> > state_load_8_reg_496;
    sc_signal< sc_lv<8> > state_load_9_reg_501;
    sc_signal< sc_lv<4> > state_addr_12_reg_506;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > state_addr_13_reg_511;
    sc_signal< sc_lv<8> > state_load_10_reg_516;
    sc_signal< sc_lv<8> > state_load_11_reg_521;
    sc_signal< sc_lv<4> > state_addr_14_reg_526;
    sc_signal< sc_lv<4> > state_addr_15_reg_531;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > zext_ln276_fu_344_p1;
    sc_signal< sc_lv<64> > zext_ln276_1_fu_349_p1;
    sc_signal< sc_lv<64> > zext_ln276_2_fu_354_p1;
    sc_signal< sc_lv<64> > zext_ln276_3_fu_359_p1;
    sc_signal< sc_lv<64> > zext_ln276_4_fu_364_p1;
    sc_signal< sc_lv<64> > zext_ln276_5_fu_368_p1;
    sc_signal< sc_lv<64> > zext_ln276_6_fu_372_p1;
    sc_signal< sc_lv<64> > zext_ln276_7_fu_376_p1;
    sc_signal< sc_lv<64> > zext_ln276_8_fu_380_p1;
    sc_signal< sc_lv<64> > zext_ln276_9_fu_384_p1;
    sc_signal< sc_lv<64> > zext_ln276_10_fu_388_p1;
    sc_signal< sc_lv<64> > zext_ln276_11_fu_392_p1;
    sc_signal< sc_lv<64> > zext_ln276_12_fu_396_p1;
    sc_signal< sc_lv<64> > zext_ln276_13_fu_401_p1;
    sc_signal< sc_lv<64> > zext_ln276_14_fu_406_p1;
    sc_signal< sc_lv<64> > zext_ln276_15_fu_411_p1;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<32> ap_const_lv32_F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_state_addr_10_reg_486();
    void thread_state_addr_11_reg_491();
    void thread_state_addr_12_reg_506();
    void thread_state_addr_13_reg_511();
    void thread_state_addr_14_reg_526();
    void thread_state_addr_15_reg_531();
    void thread_state_addr_1_reg_421();
    void thread_state_addr_2_reg_426();
    void thread_state_addr_3_reg_431();
    void thread_state_addr_4_reg_436();
    void thread_state_addr_5_reg_441();
    void thread_state_addr_6_reg_446();
    void thread_state_addr_7_reg_451();
    void thread_state_addr_8_reg_466();
    void thread_state_addr_9_reg_471();
    void thread_state_addr_reg_416();
    void thread_state_address0();
    void thread_state_address1();
    void thread_state_ce0();
    void thread_state_ce1();
    void thread_state_d0();
    void thread_state_d1();
    void thread_state_we0();
    void thread_state_we1();
    void thread_zext_ln276_10_fu_388_p1();
    void thread_zext_ln276_11_fu_392_p1();
    void thread_zext_ln276_12_fu_396_p1();
    void thread_zext_ln276_13_fu_401_p1();
    void thread_zext_ln276_14_fu_406_p1();
    void thread_zext_ln276_15_fu_411_p1();
    void thread_zext_ln276_1_fu_349_p1();
    void thread_zext_ln276_2_fu_354_p1();
    void thread_zext_ln276_3_fu_359_p1();
    void thread_zext_ln276_4_fu_364_p1();
    void thread_zext_ln276_5_fu_368_p1();
    void thread_zext_ln276_6_fu_372_p1();
    void thread_zext_ln276_7_fu_376_p1();
    void thread_zext_ln276_8_fu_380_p1();
    void thread_zext_ln276_9_fu_384_p1();
    void thread_zext_ln276_fu_344_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
