CMAKE_MINIMUM_REQUIRED(VERSION 3.5)
PROJECT(edaduino_vp)


SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

list(INSERT CMAKE_MODULE_PATH 0 ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

IF(NOT ETISS_PREFIX)
  MESSAGE("ETISS_HOME: " $ENV{ETISS_HOME})
  SET(ETISS_PREFIX $ENV{ETISS_HOME})
ENDIF()
IF(NOT ETISS_VPLIB_PREFIX)
  MESSAGE("ETISS_VPLIB_HOME: " $ENV{ETISS_VPLIB_HOME})
  SET(ETISS_VPLIB_PREFIX $ENV{ETISS_VPLIB_HOME})
ENDIF()
IF(NOT MinresSCC_PREFIX)
  MESSAGE("SCC_MINRES_HOME:" $ENV{SCC_MINRES_HOME})
  SET(MinresSCC_PREFIX $ENV{SCC_MINRES_HOME})
ENDIF()
IF(NOT SYSTEMC_PREFIX)
  MESSAGE("SYSTEMC_HOME: " $ENV{SYSTEMC_HOME})
  SET(SYSTEMC_PREFIX $ENV{SYSTEMC_HOME})
ENDIF()

FIND_PACKAGE(ETISS REQUIRED)
FIND_PACKAGE(ETISSVP REQUIRED)
FIND_PACKAGE(MinresSCC REQUIRED)
FIND_PACKAGE(SystemC REQUIRED)

if(AESVRTL_PREFIX)
    FIND_PACKAGE(AESVRTL REQUIRED)
    FIND_PACKAGE(VERILATOR REQUIRED)
endif(AESVRTL_PREFIX)


ADD_EXECUTABLE(${PROJECT_NAME}
    main.cpp
    src/edaduino_vp.cpp
    src/edaduino_soc.cpp
    src/utils/config.cpp
    src/riscv_cpu.cpp
    src/utils/logging.cpp
    
    src/periphs/clint.cpp
    src/periphs/uart.cpp
    src/periphs/uart_device.cpp
    src/aes_ha/aes_ha.cpp
)

if(AESVRTL_FOUND AND VERILATOR_FOUND)
    target_compile_definitions(${PROJECT_NAME} PUBLIC VRTL_CORE)
    TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC ${VERILATOR_INCLUDE_DIRS})
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC AESVRTL::Vaes16_bidir)
endif(AESVRTL_FOUND AND VERILATOR_FOUND)


TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}
  PRIVATE include/)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC
  ETISS::etiss
  ETISSVP::etissvp
  SystemC::systemc
  Minres::SCC
)
